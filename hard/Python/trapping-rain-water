class Solution(object):
    def trap(self, height):
        len1 = len(height)

        leftMax = [0] * len1
        rightMax = [0] * len1
        res = 0

        leftMax[0] = height[0]
        leftMax[len1 - 1] = height[len1 - 1]

        rightMax[len1 - 1] = height[len1 - 1]

        curentMaxL = height[0]
        currentMaxR = height[len1 - 1]

        for i in range(1, len1):
            leftMax[i] = curentMaxL
            curentMaxL = max(curentMaxL, height[i])

        for i in range(len1-2, -1, -1):
            rightMax[i] = currentMaxR
            currentMaxR = max(currentMaxR, height[i])

        for i in range(len1):
            temp = min(leftMax[i], rightMax[i]) - height[i]
            if temp > 0:
                res += min(leftMax[i], rightMax[i]) - height[i]
        
        return res
        