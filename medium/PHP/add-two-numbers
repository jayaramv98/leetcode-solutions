/**
 * Definition for a singly-linked list.
 * class ListNode {
 *     public $val = 0;
 *     public $next = null;
 *     function __construct($val = 0, $next = null) {
 *         $this->val = $val;
 *         $this->next = $next;
 *     }
 * }
 */
class Solution {

    /**
     * @param ListNode $l1
     * @param ListNode $l2
     * @return ListNode
     */
    function addTwoNumbers($l1, $l2) {
       $res_list = new ListNode(0);
       $head = $res_list;
       $carry = 0;
       while (!empty($l1) || !empty($l2)) {
           $value = ($l1 ? $l1->val : 0 ) + ($l2 ? $l2->val : 0 ) + $carry;
           $carry = floor($value / 10);
           $res_list->next = new ListNode($value % 10);
           $l1 = $l1->next;
           $l2 = $l2->next;
           $res_list = $res_list->next;
       }

       if ($carry > 0) {
          $res_list->next = new ListNode($carry);
       }
       return $head->next;        
    }
}